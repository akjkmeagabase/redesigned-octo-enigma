# web3.storage wrangler config.

name = "web3-storage"
# `javascript` means our we'll send pre-built javascript code. 
#  ...as opposed to `webpack` where wrangler builds our code for us.
type = "javascript"

# tell wrangler how to build our service-worker bundle
[build]
command = "npm run build"
watch_dir = "src"
[build.upload]
format = "service-worker"

# ---- Environment specific overrides below ! ----
# NOTE: wrangler automatically assigns each env the root `name` with the env name suffixed on the end
# NOTE: wrangler tries to find an account_id defined at the root if workers_dev = true is not provided on your env.

# PROD!
[env.production]
# name = "web3-storage-production"
workers_dev = true
account_id = "fffa4b4363a7e5250af8357087263b3a" # Protocol Labs CF account
route = "api.web3.storage/*"

[env.staging]
# name = "web3-storage-staging"
workers_dev = true
account_id = "fffa4b4363a7e5250af8357087263b3a" # Protocol Labs CF account
route = "api-staging.web3.storage/*"

# Add your env here. Override the the values you need to change.

[env.alan]
workers_dev = true
account_id = "4fe12d085474d33bdcfd8e9bed4d8f95"

[env.oli]
workers_dev = true
account_id = "6e5a2aed80cd37d77e8d0c797a75ebbd"

[env.yusef]
workers_dev = true
account_id = "8c3da25233263bd7a26c0e2e04569ded"

[env.vsantos]
workers_dev = true
account_id = "7ec0b7cf2ec201b2580374e53ba5f37b"

# Create your env name as the value of `whoami` on your system, so you can run `npm start` to run in dev mode.
# Copy this template and fill out the values
# [env.${whoami}]
# workers_dev = true
# account_id = "<get me from `wrangler whoami`"

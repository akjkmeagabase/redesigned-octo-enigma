name: Website
on:
  push:
    branches:
      - main
    paths:
      - 'packages/website/**'
      - '.github/workflows/website.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'packages/website/**'
      - '.github/workflows/website.yml'
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - run: npm test --workspace packages/website

  build:
    name: Build & Add to IPFS
    runs-on: ubuntu-latest
    outputs:
      cid: ${{ steps.ipfs.outputs.cid }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - run: npm run build -w packages/client
      - run: npm run build -w packages/website
        env:
          NEXT_PUBLIC_ENV: staging
          NEXT_PUBLIC_API: https://api-staging.web3.storage
          NEXT_PUBLIC_MAGIC: ${{ secrets.STAGING_MAGIC_PUBLIC_KEY }}

      # TODO: replace with adding to web3.storage
      # Pin the built site to ipfs-cluster, output the cid as `steps.ipfs.outputs.cid`
      - name: Add to IPFS
        uses: ipfs-shipyard/ipfs-github-action@v2.1.0
        id: ipfs
        with:
          path_to_add: packages/website/out
          cluster_host: /dnsaddr/filecoin.storage.ipfscluster.io
          cluster_user: ${{ secrets.CLUSTER_USER }}
          cluster_password: ${{ secrets.CLUSTER_PASSWORD }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - run: echo ${{ steps.ipfs.outputs.url }}
  
  # Publish to the staging domain if it's a change on main ðŸš€
  deploy:
    name: Deploy https://staging.web3.storage
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: npx dnslink-cloudflare --record staging --domain web3.storage --link /ipfs/${{ needs.build.outputs.cid }}
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

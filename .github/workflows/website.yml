name: Website
on:
  push:
    branches:
      - main
    paths:
      - 'packages/website/**'
      - '.github/workflows/website.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'packages/website/**'
      - '.github/workflows/website.yml'
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - run: npm test --workspace packages/website

  build:
    name: Build & Add to IPFS
    runs-on: ubuntu-latest
    outputs:
      cid: ${{ steps.ipfs.outputs.cid }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - run: npm run build -w packages/client
      - run: npm run build -w packages/website
        env:
          NEXT_PUBLIC_ENV: staging
          NEXT_PUBLIC_API: https://api-staging.web3.storage
          NEXT_PUBLIC_MAGIC: ${{ secrets.STAGING_MAGIC_PUBLIC_KEY }}
          NEXT_PUBLIC_COUNTLY_URL: ${{ secrets.COUNTLY_URL }}
          NEXT_PUBLIC_COUNTLY_KEY: ${{ secrets.COUNTLY_KEY }}

      # Add the site to web3.storage, output the cid as `steps.ipfs.outputs.cid`
      - name: Add to web3.storage
        uses: web3-storage/add-to-web3@v2
        id: ipfs
        with:
          path_to_add: packages/website/out
          web3_token: ${{ secrets.WEB3_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo ${{ steps.ipfs.outputs.url }}

  # Publish to the staging domain if it's a change on main ðŸš€
  deploy:
    name: Deploy https://staging.web3.storage
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: npx dnslink-cloudflare --record staging --domain web3.storage --link /ipfs/${{ needs.build.outputs.cid }}
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/website
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: website
      - uses: actions/checkout@v2
        if: ${{ steps.tag-release.outputs.releases_created }}
      - uses: actions/setup-node@v2
        if: ${{ steps.tag-release.outputs.releases_created }}
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/
      - uses: bahmutov/npm-install@v1
        if: ${{ steps.tag-release.outputs.releases_created }}
      # --- Website deploy steps ----------------------------------------------
      - name: Deploy to Cloudflare pages
        if: ${{ steps.tag-release.outputs.releases_created }}
        # Reset the `website-prod` branch to trigger a production build & deploy on Cloudflare Pages.
        run: |
          git push origin --delete website-prod
          git push origin main:website-prod

      - run: npm run build -w packages/client
        if: ${{ steps.tag-release.outputs.releases_created }}
      - run: npm run build -w packages/website
        if: ${{ steps.tag-release.outputs.releases_created }}
        env:
          NEXT_PUBLIC_ENV: production
          NEXT_PUBLIC_API: https://api.web3.storage
          NEXT_PUBLIC_MAGIC: ${{ secrets.PROD_MAGIC_PUBLIC_KEY }}
          NEXT_PUBLIC_COUNTLY_URL: ${{ secrets.COUNTLY_URL }}
          NEXT_PUBLIC_COUNTLY_KEY: ${{ secrets.COUNTLY_KEY }}

      # Add the site to web3.storage, output the cid as `steps.ipfs.outputs.cid`
      - name: Add to web3.storage
        if: ${{ steps.tag-release.outputs.release_created && matrix.package == 'website' }}
        uses: web3-storage/add-to-web3@v2
        id: ipfs
        with:
          path_to_add: packages/website/out
          web3_token: ${{ secrets.WEB3_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy https://web3.storage
        if: ${{ steps.tag-release.outputs.release_created && matrix.package == 'website' }}
        run: npx dnslink-cloudflare --record _dnslink --domain web3.storage --link /ipfs/${{ steps.ipfs.outputs.cid }}
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
